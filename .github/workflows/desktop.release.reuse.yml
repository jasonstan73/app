name: Desktop Reusable Release Workflow

on:
  workflow_call:
    inputs:
      channel:
        required: true
        type: string

jobs:
  Windows:
    runs-on: windows-latest
    env:
      SM_KEYPAIR_ALIAS: ${{ secrets.SM_KEYPAIR_ALIAS }}

    defaults:
      run:
        working-directory: packages/desktop

    steps:
      - name: Code signing with Software Trust Manager
        uses: digicert/ssm-code-signing@v1.0.0

      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          registry-url: 'https://registry.npmjs.org'
          node-version-file: '.nvmrc'
          cache: 'yarn'

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Dependencies
        run: yarn install --immutable

      - name: Rebuild Electron Native Modules
        run: yarn workspace @standardnotes/desktop rebuild:home-server

      - name: Build
        run: yarn build:desktop

      - name: Webpack
        run: yarn run webpack --config desktop.webpack.prod.js

      - name: Set up certificate
        run: |
          echo "${{ secrets.SM_CLIENT_CERT_FILE_B64 }}" | base64 --decode > /d/Certificate_pkcs12.p12
        shell: bash

      - name: Set variables
        id: variables
        run: |
          export DEBUG='electron-builder'

          echo "SM_HOST=${{ secrets.SM_HOST }}" >> "$GITHUB_ENV"
          echo "SM_API_KEY=${{ secrets.SM_API_KEY }}" >> "$GITHUB_ENV"
          echo "SM_CLIENT_CERT_FILE=D:\\Certificate_pkcs12.p12" >> "$GITHUB_ENV"
          echo "SM_CLIENT_CERT_PASSWORD=${{ secrets.SM_CLIENT_CERT_PASSWORD }}" >> "$GITHUB_ENV"

          echo "C:\Program Files (x86)\Windows Kits\10\App Certification Kit" >> $GITHUB_PATH
          echo "C:\Program Files (x86)\Microsoft SDKs\Windows\v10.0A\bin\NETFX 4.8 Tools" >> $GITHUB_PATH
          echo "C:\Program Files\DigiCert\DigiCert Keylocker Tools" >> $GITHUB_PATH
        shell: bash

      - name: Setup Keylocker KSP on windows
        run: |
          curl -X GET  https://one.digicert.com/signingmanager/api-ui/v1/releases/Keylockertools-windows-x64.msi/download -H "x-api-key:%SM_API_KEY%" -o Keylockertools-windows-x64.msi
          msiexec /i Keylockertools-windows-x64.msi /quiet /qn
          smksp_registrar.exe list
          smctl.exe keypair ls
          C:\Windows\System32\certutil.exe -csp "DigiCert Signing Manager KSP" -key -user
        shell: cmd

      - name: Certificates Sync
        run: |
           smctl windows certsync
        shell: cmd

      - name: Build & Sign With Electron Builder
        run: yarn run electron-builder --windows --x64 --ia32 --publish=never --c.extraMetadata.version=$(node -p "require('./../web/package.json').version")

      - name: Upload
        uses: actions/upload-artifact@v4.0.0
        with:
          name: dist-windows
          path: |
            packages/desktop/dist/*.blockmap
            packages/desktop/dist/*.exe
            packages/desktop/dist/*.yml
            packages/desktop/dist/*.yaml

  Publish:
    runs-on: ubuntu-latest
    env:
      SNAPCRAFT_STORE_CREDENTIALS: ${{ secrets.SNAPCRAFT_STORE_CREDENTIALS }}
    if: ${{ always() }}
    needs: [Windows]
    defaults:
      run:
        working-directory: packages/desktop
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          registry-url: 'https://registry.npmjs.org'
          node-version-file: '.nvmrc'
          cache: 'yarn'

      - run: echo APP_VERSION=$(node -p "require('./../web/package.json').version") >> $GITHUB_ENV

      - run: yarn install --immutable

      - uses: actions/download-artifact@v4
        with:
          pattern: dist-*
          path: packages/desktop/dist
          merge-multiple: true

      - name: Generate Checksums
        run: node scripts/sums.mjs

      - name: Generate Release Notes
        uses: ./actions/release-notes
        with:
          package: web desktop
        id: release-notes

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.CI_PAT_TOKEN }}
          tag_name: "@standardnotes/desktop@${{ env.APP_VERSION }}"
          name: "Desktop ${{ env.APP_VERSION }}"
          body: ${{ steps.release-notes.outputs.result }}
          prerelease: true
          draft: false
          files: packages/desktop/dist/*

      - name: Publish Snap
        run: |
          sudo snap install snapcraft --classic
          snapcraft upload dist/standard-notes-${{ env.APP_VERSION }}-linux-amd64.snap --release stable,candidate,beta,edge
          event-type: releases-updated-event


